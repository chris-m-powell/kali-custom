---
- name: Validate parameters
  run_once: true
  assert:
    that:
      - user is defined
      - alacritty.project.repo is defined 
      - alacritty.project.dest is defined 
      - alacritty.config.dir is defined 
    quiet: true

- name: Check install status
  stat:
    path: /usr/local/bin/alacritty 
  register: bin

- name: Build from source
  block: 
    - name: Install build dependencies 
      apt:
        pkg:
          - cmake 
          - pkg-config
          - libfreetype6-dev
          - libfontconfig1-dev
          - libxcb-xfixes0-dev
          - libxkbcommon-dev
          - python3
          - gzip
          - fonts-jetbrains-mono
        state: latest
        update_cache: true

    - name: Get user home directory
      become_user: "{{ user }}"
      shell: echo ${HOME}
      changed_when: false
      register: home

    - name: Download Rust installer
      become_user: "{{ user }}"
      get_url:
        url: https://sh.rustup.rs
        dest: "{{ home.stdout }}"
        mode: 0700
        validate_certs: true
      register: rust_installer

    - name: Execute Rust installer
      become_user: "{{ user }}"
      shell: "{{ '/bin/sh ' + rust_installer.dest + ' -y' }}"
      args:
        chdir: "{{ home.stdout }}"

    - name: Remove Rust installer
      file:
        path: "{{ rust_installer.dest }}" 
        state: absent

    - name: Install via Cargo
      become_user: "{{ user }}"
      command: "{{ '~/.cargo/bin/' + item }}"
      loop:
        - rustup override set stable
        - rustup update stable
        - cargo install alacritty

    - name: Copy binary
      copy:
        src: "{{ home.stdout + '/.cargo/bin/alacritty' }}"
        dest: /usr/local/bin 
        mode: 0755
        remote_src: true
    
    - name: Remove Rust installation
      file:
        path: "{{ home.stdout + '/' + item }}" 
        state: absent
      loop:
        - ".cargo"
        - ".rustup"

    - name: Remove Rust environment variables
      lineinfile:
        path: "{{ home.stdout + '/' + item }}"
        state: absent
        line: . "$HOME/.cargo/env"
      loop:
        - ".zshenv"
        - ".bashrc"

    - name: Clone project repository
      become_user: "{{ user }}"
      git:
        repo: "{{ 'https://' + alacritty.project.repo }}"
        dest: "{{ alacritty.project.dest }}" 
        depth: 1
        single_branch: true
      register: clone

    - name: Install icon
      copy:
        src: "{{ alacritty.project.dest + '/extra/logo/alacritty-term.svg' }}"
        dest: /usr/share/pixmaps/Alacritty.svg
        remote_src: true

    - name: Install desktop file 
      command: "{{'desktop-file-install ' +  alacritty.project.dest + '/extra/linux/Alacritty.desktop' }}"

    - name: Update desktop database 
      command: update-desktop-database 

    - name: Create man page directory
      file:
        path: /usr/local/share/man/man1
        state: directory
      
    - name: Create man pages
      shell: "{{ item }}"
      args:
        chdir: "{{ alacritty.project.dest }}"
      loop:
        - gzip -c extra/alacritty.man | tee /usr/local/share/man/man1/alacritty.1.gz > /dev/null
        - gzip -c extra/alacritty-msg.man | tee /usr/local/share/man/man1/alacritty-msg.1.gz > /dev/null

    - name: Remove local project repository
      file:
        path: "{{ alacritty.project.dest }}" 
        state: absent
  when:
    - not bin.stat.exists

- name: Create local config directory
  become_user: "{{ user }}"
  file:
    path: "{{ alacritty.config.dir }}"
    state: directory

- name: Render config from template
  become_user: "{{ user }}"
  template:
    src: "{{ item[0] }}"
    dest: "{{ alacritty.config.dir + '/' + item[1] }}"
  with_together:
    - ['alacritty.yml.j2','nord.yml.j2']
    - ['alacritty.yml','nord.yml']

- name: Set as default terminal emulator
  alternatives:
    name: x-terminal-emulator
    link: /usr/bin/x-terminal-emulator
    path: /usr/local/bin/alacritty
    priority: 50

- name: XFCE-specific configurations 
  become_user: "{{ user }}"
  block:
    - name: Create necessary directories
      file:
        path: "{{ item }}" 
        state: directory
      loop:
        - ~/.local/share/xfce4/helpers
        - ~/.config/xfce4

    - name: Create XFCE desktop entry
      copy:
        src: "custom-TerminalEmulator.desktop"
        dest: ~/.local/share/xfce4/helpers

    - name: Set XFCE default terminal emulator 
      lineinfile:
        path: ~/.config/xfce4/helpers.rc
        line: TerminalEmulator=custom-TerminalEmulator
        create: true
  when:
    - '"kali-desktop-xfce" in ansible_facts.packages'
